[{"C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\App.js":"1","C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\components\\Register.js":"2","C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\components\\Main.js":"3","C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\components\\Login.js":"4","C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\reportWebVitals.js":"5","C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\index.js":"6"},{"size":2041,"mtime":1607066314820,"results":"7","hashOfConfig":"8"},{"size":2690,"mtime":1607139428337,"results":"9","hashOfConfig":"8"},{"size":5038,"mtime":1607368188375,"results":"10","hashOfConfig":"8"},{"size":2890,"mtime":1607139122725,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1606810674996,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1606814686048,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dcykfz",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\App.js",[],"C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\components\\Register.js",["28","29"],"import React, {useState} from 'react';\r\nimport { Form, Input, Button, message  } from 'antd';\r\nimport axios from 'axios';\r\nimport { useHistory\r\n} from \"react-router-dom\";\r\nimport Password from 'antd/lib/input/Password';\r\n// import {useAuth} from '../App'\r\n\r\n\r\n\r\nfunction Register(props) {\r\n\r\n  const [loadingRegister, setLoadingRegister ] = useState(false)\r\n\r\n  // let auth = useAuth();\r\n  let history = useHistory();\r\n\r\n  const onFinish = async values => {\r\n    setLoadingRegister(true)\r\n  \r\n    try {\r\n      const response = await axios.get(\r\n        `https://iotzlearning.herokuapp.com/api/check-user?username=${values.username}`,                     \r\n      )\r\n      console.log(response.data)\r\n      if(response.data.userExist === true) {\r\n        setLoadingRegister(false)\r\n        message.error('Xin lỗi, Tên đăng nhập đã được dùng!')\r\n        console.log('deodc')\r\n      } else{\r\n        const res = await axios.post(\r\n          'https://iotzlearning.herokuapp.com/api/register', \r\n              values,\r\n        ) \r\n        setLoadingRegister(false)\r\n        message.success('Đăng ký thành công')\r\n        history.push('/login') \r\n        // localStorage.setItem ('_id', res.data._id);  \r\n      }\r\n     \r\n      \r\n        \r\n     \r\n    } catch (error) {\r\n        console.log(error)     \r\n    }\r\n}\r\n    //style\r\n    const titleLoginStyle = {\r\n        marginBottom: '20px',\r\n        color: 'green',\r\n        fontSize: '30px',\r\n    }\r\n\r\n   \r\n    const lableStyle = {\r\n      color: 'white ',\r\n      \r\n    }\r\n    \r\n      \r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={titleLoginStyle}>\r\n                Trang đăng ký tài khoản\r\n            </div>\r\n            <Form\r\n      name=\"basic\"\r\n      onFinish={onFinish}\r\n    >\r\n      <Form.Item\r\n       \r\n       label={\r\n        <div style={lableStyle}>\r\n          Username\r\n        </div>\r\n      }\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item  \r\n        \r\n        label={\r\n          <div style={lableStyle}>\r\n            Password\r\n          </div>\r\n        }\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      \r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={loadingRegister}>\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\components\\Main.js",["30","31","32","33","34","35"],"import React, {useState, useEffect}  from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Space } from 'antd';\r\nimport './main.css'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    const [on, setOn] = useState(false)\r\n    const [loadingOn, setLoadingOn ] = useState(false)\r\n\r\n    const [humidity, setHumidity] = useState()\r\n    const [temperature, setTemperature] = useState()\r\n    const [gas, setGas] = useState()\r\n\r\n\r\n        const handleLightOn = async () => {\r\n            setLoadingOn(true)\r\n            try {\r\n                const res = await axios.get(\r\n                    `https://iotzlearning.herokuapp.com/api/light?key=${localStorage.getItem('_id')}&turn=on`\r\n                )\r\n                \r\n                if(res.data.sendSwitchLight = \"OK\"){\r\n                    setOn(true)\r\n                    setLoadingOn(false)\r\n                    try {\r\n                        const response = await axios.get(\r\n                            `https://iotzlearning.herokuapp.com/api/update-light?key=${localStorage.getItem('_id')}&turn=on`\r\n                        )               \r\n                    } catch (error) {\r\n                        \r\n                        console.log(error.message)\r\n                    }\r\n                 \r\n                }\r\n                console.log('den sang')\r\n                console.log(res.data)\r\n                \r\n            } catch (error) {\r\n                \r\n                console.log(error.message)\r\n            }\r\n        }\r\n          \r\n   \r\n\r\n        const handleLightOff = async () => {\r\n            \r\n            try {\r\n                const res = await axios.get(\r\n                    `https://iotzlearning.herokuapp.com/api/light?key=${localStorage.getItem('_id')}&turn=off`\r\n                )\r\n                if(res.data.sendSwitchLight = \"OK\"){\r\n                    setOn(false)\r\n                    try {\r\n                        const response = await axios.get(\r\n                            `https://iotzlearning.herokuapp.com/api/update-light?key=${localStorage.getItem('_id')}&turn=off`\r\n                        )               \r\n                    } catch (error) {\r\n                        \r\n                        console.log(error.message)\r\n                    }\r\n                    \r\n                }\r\n                console.log('den tat')\r\n                console.log(res.data)\r\n                \r\n            } catch (error) {\r\n                \r\n                console.log(error.message)\r\n            }\r\n        }\r\n\r\n\r\n            useEffect( async () => {\r\n                try {\r\n                    const res = await axios.get(\r\n                        `https://iotzlearning.herokuapp.com/api/data?key=${localStorage.getItem('_id')}`\r\n                    )\r\n                    const datas = res.data\r\n                    setHumidity(datas[0].humidity)\r\n                    setTemperature(datas[0].temperature)\r\n                    setGas(datas[0].gas)\r\n                    \r\n                   \r\n                    \r\n                } catch (error) {\r\n                    \r\n                    console.log(error.message)\r\n                }\r\n              }, []);\r\n\r\n\r\n         \r\n\r\n    //Style\r\n    const btnStyle = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 30,\r\n    }\r\n    const resfeshStyle = {\r\n        marginBottom: 100,\r\n    }\r\n\r\n   \r\n    \r\n    return (\r\n        \r\n        <div>\r\n           \r\n            <div>\r\n                <div style={btnStyle}>\r\n                    <Space  size={30}>\r\n                        <Button type=\"primary\" onClick={handleLightOn} loading={loadingOn}>Light On</Button>\r\n                        <Button type=\"primary\" danger onClick={handleLightOff} >Light Off</Button>\r\n                    </Space>\r\n                </div>\r\n            \r\n            </div>\r\n\r\n            <span className={on ? 'light on' : 'light'}>\r\n                 <i className=\"fas fa-lightbulb\"></i>\r\n            </span>\r\n\r\n            \r\n            \r\n            <Bar\r\n                data={{\r\n                labels: [\r\n                    \"Độ ẩm\",\r\n                    \"Nhiệt độ\",\r\n                    \"Gas\",\r\n\r\n                ],\r\n                borderColor: \"white\",\r\n                color: \"white\",\r\n                datasets: [\r\n                    {\r\n                    label: \"độ\",\r\n                    backgroundColor: [\r\n                        \"#3e95cd\",\r\n                        \"#8e5ea2\",\r\n                        \"#3cba9f\",\r\n\r\n                    ],\r\n                    \r\n                    data: [humidity, temperature, gas]\r\n                    \r\n                    }\r\n                ]\r\n                }}\r\n                options={{\r\n                legend: { display: false },\r\n                title: {\r\n                    display: true,\r\n                    text: \"Biểu đồ quan sát độ ẩm, nhiệt độ, gas\"\r\n                }\r\n                }}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\components\\Login.js",[],"C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\reportWebVitals.js",[],"C:\\Users\\CuongMeow\\Desktop\\React-Learning\\BLT IOT NHom8\\BLT IOT NHom8\\BLT IOT NHom8\\src\\index.js",[],{"ruleId":"36","severity":1,"message":"37","line":6,"column":8,"nodeType":"38","messageId":"39","endLine":6,"endColumn":16},{"ruleId":"36","severity":1,"message":"40","line":31,"column":15,"nodeType":"38","messageId":"39","endLine":31,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":25,"column":20,"nodeType":"43","messageId":"44","endLine":25,"endColumn":51},{"ruleId":"36","severity":1,"message":"45","line":29,"column":31,"nodeType":"38","messageId":"39","endLine":29,"endColumn":39},{"ruleId":"41","severity":1,"message":"42","line":55,"column":20,"nodeType":"43","messageId":"44","endLine":55,"endColumn":51},{"ruleId":"36","severity":1,"message":"45","line":58,"column":31,"nodeType":"38","messageId":"39","endLine":58,"endColumn":39},{"ruleId":"46","severity":1,"message":"47","line":77,"column":24,"nodeType":"48","endLine":93,"endColumn":16},{"ruleId":"36","severity":1,"message":"49","line":104,"column":11,"nodeType":"38","messageId":"39","endLine":104,"endColumn":23},"no-unused-vars","'Password' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'resfeshStyle' is assigned a value but never used."]